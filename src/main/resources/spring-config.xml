<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
    <!-- 将userDaoImpl交给spring进行管理
        	dao.impl.UserDaoImpl userDao = dao.impl.UserDaoImpl()
        	lazy-init="true":配置bean对象在使用时创建，容器启动时不创建
        	scope="prototype"可以创建多次。默认为单例模式
         -->
<!--原版-->
    <!--&lt;!&ndash; 注册注解处理器 &ndash;&gt;-->
    <!--<context:annotation-config/>-->
    <!--&lt;!&ndash; 将userService交给spring进行管理 &ndash;&gt;-->
    <!--<bean  id="tblAdministratorService" class="org.com.service.Impl.TblAdministratorServiceImpl"/>-->
<!--原版-->
    <!--&lt;!&ndash; 注册aop的注解处理器 &ndash;&gt;-->
    <!--<aop:aspectj-autoproxy/>-->
    <!--&lt;!&ndash; 将切面类交给spring进行管理 &ndash;&gt;-->
    <!--<bean id="myPoint" class="aop.MyAspect"/>-->
    <!--<bean id="myPoint1" class="aop.MyAspectXML"/>-->
    <!--&lt;!&ndash; 配置切面 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 定义切面 &ndash;&gt;-->
        <!--<aop:aspect ref="myPoint1">-->
            <!--<aop:pointcut id="myPoint" expression="execution(* service.impl.UserServiceImpl.updateUser(..))"/>-->
            <!--<aop:around method="aroundAdvice" pointcut-ref="myPoint" arg-names="pjp"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
    <!--===================================整合===========================================-->
    <!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 配置数据源 ，dbcp -->

    <!-- 配置c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:org/com/dao/*.xml"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
        <property name="basePackage" value="org.com.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--=====================================整合========================================-->
</beans>